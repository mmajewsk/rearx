name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main
      - master
  schedule:
    - cron: '0 */12 * * *'  # Run every 12 hours
  workflow_dispatch:  # Allow manual triggers

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: myenv
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
      
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y openssh-client netcat-openbsd
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Set up SSH tunnel
        run: |
          echo "Step 1: Creating SSH directory..."
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo "Step 2: Adding remote server to known hosts..."
          ssh-keyscan -p ${{ secrets.SSH_PORT }} -H ${{ secrets.REMOTE_SERVER }} >> ~/.ssh/known_hosts
          echo "SSH known_hosts file contents (sanitized):"
          cat ~/.ssh/known_hosts | sed 's/ssh-.*=/ssh-XXX=/'
          
          echo "Step 3: Starting SSH agent..."
          eval `ssh-agent -s`
          
          echo "Step 4: Preparing private key..."
          # First 27 chars of key for debug (enough to see if it's the right format without exposing the key)
          echo "${{secrets.SSH_PRIVATE_KEY}}" | head -1 | cut -c 1-27
          echo "${{secrets.SSH_PRIVATE_KEY}}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ls -la ~/.ssh/id_rsa
          
          echo "Step 5: Adding key to SSH agent..."
          ssh-add ~/.ssh/id_rsa
          ssh-add -l
          
          echo "Step 6: Establishing SSH tunnel..."
          # Add -v for verbose output to help troubleshoot
          ssh -v -fN -o ExitOnForwardFailure=yes -p ${{ secrets.SSH_PORT }} -L 27017:localhost:27017 ${{ secrets.SSH_USER }}@${{ secrets.REMOTE_SERVER }}
          if [ $? -eq 0 ]; then
            echo "SSH tunnel command executed successfully"
          else
            echo "SSH tunnel command failed with exit code $?"
            exit 1
          fi
          
          # Save SSH agent pid to kill later
          echo $SSH_AGENT_PID > ~/ssh_agent_pid.txt
          echo "SSH_AGENT_PID=$SSH_AGENT_PID"
          
          echo "Step 7: Waiting for tunnel to establish..."
          # Wait a moment for the tunnel to establish
          sleep 5
          
          echo "Step 8: Testing MongoDB connection..."
          # Test if port is open
          nc -zv localhost 27017
          if [ $? -eq 0 ]; then
            echo "MongoDB port is open"
          else
            echo "MongoDB port is not accessible"
            echo "Checking for any running SSH processes:"
            ps aux | grep ssh
            echo "Checking netstat for port 27017:"
            netstat -tuln | grep 27017 || echo "No process listening on 27017"
            exit 1
          fi
      - name: Set up environment file
        run: |
          echo "${{ secrets.ENV_FILE }}" > .env
          chmod 600 .env
          
      - name: Run data collection
        run: |
          python arxiv_collector.py --max=5 --keep-existing
      
      - name: Generate visualization
        run: |
          python arxiv_visualizer.py --no-browser
      
      - name: Prepare GitHub Pages content
        run: |
          # Create the GitHub Pages directory
          mkdir -p gh-pages
          # Copy the renders directory (contains main.html, list.html, and all visualizations)
          cp -r renders/* gh-pages/
          # Rename main.html to index.html for GitHub Pages
          mv gh-pages/main.html gh-pages/index.html
          # Update links in all HTML files to reference index.html instead of main.html
          find gh-pages -name "*.html" -exec sed -i 's/main\.html/index.html/g' {} \;
          # Create a README for the GitHub Pages branch
          echo "# ArXiv AI Security Papers" > gh-pages/README.md
          echo "Generated by GitHub Actions on $(date)" >> gh-pages/README.md
      
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: gh-pages
          # The branch the action should deploy to
          branch: gh-pages
      
      - name: Clean up SSH tunnel
        if: always()  # Run even if previous steps fail
        run: |
          # Kill any SSH processes
          pkill -f "ssh -fN -L" || true
          
          # Kill SSH agents
          if [ -f ~/ssh_agent_pid.txt ]; then
            kill $(cat ~/ssh_agent_pid.txt) || true
            rm ~/ssh_agent_pid.txt
          fi
